function _typeof(a){if("function"==typeof Symbol&&"symbol"==typeof Symbol.iterator){_typeof=function(a){return typeof a}}else{_typeof=function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a}}return _typeof(a)}if(function(){"use strict";var d={};d.version="0.0.0",d.createGeocoder=function(a){var b=new d.ProviderFactory;return b.createProvider(a)};var a="object"==("undefined"==typeof window?"undefined":_typeof(window))?window:"object"==("undefined"==typeof exports?"undefined":_typeof(exports))?exports:{};a.GeocoderJS=d}(),"function"==typeof define&&define.amd&&define ("mod_treasurehunt/geocoder",GeocoderJS),"undefined"==typeof GeocoderJS&&"function"==typeof require)var GeocoderJS=require("../GeocoderJS.js");if(function(b){"use strict";b.ProviderBase=function(){},b.ProviderBase.prototype={geocode:function geocode(){},geodecode:function geodecode(){},mapToGeocoded:function mapToGeocoded(){},executeRequest:function executeRequest(){}}}(GeocoderJS),"undefined"==typeof GeocoderJS&&"function"==typeof require)var GeocoderJS=require("./GeocoderJS.js");if(function(b){"use strict";b.Geocoded=function(){},b.Geocoded.prototype={getCoordinates:function getCoordinates(){return[this.latitude,this.longitude]},getLatitude:function getLatitude(){return this.latitude},getLongitude:function getLongitude(){return this.longitude},getBounds:function getBounds(){},getStreetNumber:function getStreetNumber(){return this.streetNumber},getStreetName:function getStreetName(){return this.streetName},getCity:function getCity(){return this.city},getZipcode:function getZipcode(){return this.postal_code},getCityDistrict:function getCityDistrict(){},getCounty:function getCounty(){},getCountyCode:function getCountyCode(){},getRegion:function getRegion(){return this.region}}}(GeocoderJS),"undefined"==typeof GeocoderJS&&"function"==typeof require)var GeocoderJS=require("./GeocoderJS.js");if(function(c){"use strict";var d={type:"Feature",properties:{},geometry:{type:"Point",coordinates:[]}};c.GeoJSONDumper=function(){return{dump:function dump(b){var a=d;return a.geometry.coordinates=[b.getLongitude(),b.getLatitude()],a}}}}(GeocoderJS),"undefined"==typeof GeocoderJS&&"function"==typeof require){var GeocoderJS=require("../GeocoderJS.js");require("../ExternalURILoader.js")}if(function(e){"use strict";e.ProviderFactory=function(){},e.ProviderFactory.prototype.createProvider=function(a){"string"==typeof a&&(a={provider:a});var f,g=new e.ExternalURILoader;switch(a.provider){case"google":f=new e.GoogleAPIProvider(g,a);break;case"mapquest":f=new e.MapquestProvider(g,a);break;case"openstreetmap":f=new e.OpenStreetMapProvider(g,a);break;case"bing":f=new e.BingProvider(g,a);break;case"yandex":f=new e.YandexProvider(g,a);}return f}}(GeocoderJS),"undefined"==typeof GeocoderJS&&"function"==typeof require)var GeocoderJS=require("../GeocoderJS.js");if(function(g,e){"use strict";function k(b){var a=Date.now(),f="jsonp"+Math.round(a+1000001*Math.random());return e[f]=function(a){b(a),delete e[f]},f}g.ExternalURILoader=function(b){this.options={},void 0===b&&(b={}),this.setOptions(b)},g.ExternalURILoader.prototype.setOptions=function(d){var a={protocol:null,host:null,pathname:null};for(var b in a){this.options[b]=void 0!==d[b]?d[b]:a[b]}},g.ExternalURILoader.prototype.executeRequest=function(a,b){function c(a,b){var c,i=require("url"),e=require(l.options.protocol),f={protocol:l.options.protocol,host:l.options.host,pathname:l.options.pathname,query:a};c=i.format(f),e.get(c,function(c){if(200!=c.statusCode)throw"Received HTTP status code "+c.statusCode+" when attempting geocoding request.";c.data="",c.setEncoding("utf8"),c.on("data",function(b){c.data+=b}),c.on("end",function(){if(!c.data||!c.data.length)throw"Received empty data when attempting geocoding request.";var a=!1,h=0,i=[];try{a=JSON.parse(c.data)}catch(a){throw"Received invalid JSON data when attempting geocoding request."}if(a&&a.status){if("OVER_QUERY_LIMIT"===a.status)throw"Exceeded daily quota when attempting geocoding request.";if("OK"===a.status&&a.results){for(;h<a.results.length;h++){i.push(g.GoogleAPIProvider.prototype.mapToGeocoded(a.results[h]))}return b(i)}}throw"Received unexpected JSON data when attempting geocoding request."})}).on("error",function(b){throw b})}function d(c,g){var a,b=new XMLHttpRequest,e=l.options.protocol+"://"+l.options.host+"/"+l.options.pathname+"?",m=[];c.JSONPCallback&&(a=c.JSONPCallback,delete c.JSONPCallback,c[a]=k(g));for(var h in c){c.hasOwnProperty(h)&&m.push(h+"="+c[h])}if(e+=m.join("&"),a){var i=document.createElement("script");i.src=e,document.getElementsByTagName("head")[0].appendChild(i)}else b.onload=function(){if(200!=this.status)return console.log("Received HTTP status code "+this.status+" when attempting geocoding request."),g(null);if(!this.responseText||!this.responseText.length)return console.log("Received empty data when attempting geocoding request."),g(null);var b=!1;try{b=JSON.parse(this.responseText)}catch(a){return console.log("Received invalid JSON data when attempting geocoding request."),g(null)}return b?g(b):(console.log("Received unexpected JSON data when attempting geocoding request."),g(null))},b.open("GET",e),b.send()}var l=this;if("undefined"!=typeof XMLHttpRequest)return d(a,b);try{{require("url")}return c(a,b)}catch(a){}return b(null)}}(GeocoderJS,window),"undefined"==typeof GeocoderJS&&"function"==typeof require){var GeocoderJS=require("../GeocoderJS.js");require("../Geocoded.js"),require("../providers/ProviderBase.js")}if(function(d){"use strict";var g,h;d.BingProvider=function(b,a){if(void 0===b)throw"No external loader defined.";this.externalLoader=b,a=a?a:{},g=a.useSSL?a.useSSL:!1,h=a.apiKey?a.apiKey:null,h&&(g=!0)},d.BingProvider.prototype=new d.ProviderBase,d.BingProvider.prototype.constructor=d.BingProvider,d.BingProvider.prototype.geocode=function(b,a){this.externalLoader.setOptions({protocol:!0===g?"https":"http",host:"dev.virtualearth.net",pathname:"REST/v1/Locations/"+b});var c={key:h,JSONPCallback:"jsonp"};this.executeRequest(c,a)},d.BingProvider.prototype.geodecode=function(b,a,c){this.externalLoader.setOptions({protocol:!0===g?"https":"http",host:"dev.virtualearth.net",pathname:"REST/v1/Locations/"+b+","+a});var d={key:h,JSONPCallback:"jsonp"};this.executeRequest(d,c)},d.BingProvider.prototype.executeRequest=function(d,f){var b=this;this.externalLoader.executeRequest(d,function(c){var a=[];for(var d in c.resourceSets[0].resources){a.push(b.mapToGeocoded(c.resourceSets[0].resources[d]))}f(a)})},d.BingProvider.prototype.mapToGeocoded=function(a){var b=new d.Geocoded;return b.latitude=a.point.coordinates[0],b.longitude=a.point.coordinates[1],b.streetName=a.address.addressLine,b.city=a.address.locality,b.region=a.address.adminDistrict,b.postal_code=a.address.postalCode,b}}(GeocoderJS),"undefined"==typeof GeocoderJS&&"function"==typeof require){var GeocoderJS=require("../GeocoderJS.js");require("../Geocoded.js"),require("../providers/ProviderBase.js")}if(function(f){"use strict";var g,h;f.GoogleAPIProvider=function(b,a){if(void 0===b)throw"No external loader defined.";this.externalLoader=b,a=a?a:{},g=a.useSSL?a.useSSL:!1,h=a.apiKey?a.apiKey:null,h&&(g=!0)},f.GoogleAPIProvider.prototype=new f.ProviderBase,f.GoogleAPIProvider.prototype.constructor=f.GoogleAPIProvider,f.GoogleAPIProvider.prototype.geocode=function(b,a){this.externalLoader.setOptions({protocol:!0===g?"https":"http",host:"maps.googleapis.com",pathname:"maps/api/geocode/json"});var c={sensor:!1,address:b};h&&(c.key=h),this.executeRequest(c,a)},f.GoogleAPIProvider.prototype.geodecode=function(b,a,c){this.externalLoader.setOptions({protocol:g?"https":"http",host:"maps.googleapis.com",pathname:"maps/api/geocode/json"});var d={sensor:!1,latlng:b+","+a};h&&(d.key=h),this.executeRequest(d,c)},f.GoogleAPIProvider.prototype.executeRequest=function(d,f){var b=this;this.externalLoader.executeRequest(d,function(c){var a=[];for(var d in c.results){a.push(b.mapToGeocoded(c.results[d]))}f(a)})},f.GoogleAPIProvider.prototype.mapToGeocoded=function(a){var b=new f.Geocoded;b.latitude=a.geometry.location.lat,b.longitude=a.geometry.location.lng;for(var c in a.address_components){for(var d in a.address_components[c].types){switch(a.address_components[c].types[d]){case"street_number":b.streetNumber=a.address_components[c].long_name;break;case"route":b.streetName=a.address_components[c].long_name;break;case"locality":b.city=a.address_components[c].long_name;break;case"administrative_area_level_1":b.region=a.address_components[c].long_name;break;case"postal_code":b.postal_code=a.address_components[c].long_name;}}}return b}}(GeocoderJS),"undefined"==typeof GeocoderJS&&"function"==typeof require)var GeocoderJS=require("../GeocoderJS.js");if(function(d){"use strict";d.MapquestProvider=function(e,a){if(void 0===e)throw"No external loader defined.";this.externalLoader=e,"object"!=_typeof(a)&&(a={});var f={apiKey:""};for(var c in f){void 0===a[c]&&(a[c]=f[c])}this.apiKey=a.apiKey},d.MapquestProvider.prototype=new d.ProviderBase,d.MapquestProvider.prototype.constructor=d.MapquestProvider,d.MapquestProvider.prototype.geocode=function(d,a){this.externalLoader.setOptions({protocol:"http",host:"www.mapquestapi.com",pathname:"geocoding/v1/address"});var b={key:this.apiKey,outputFormat:"json",location:encodeURIComponent(d),JSONPCallback:"callback"};this.executeRequest(b,a)},d.MapquestProvider.prototype.geodecode=function(e,a,b){this.externalLoader.setOptions({protocol:"http",host:"www.mapquestapi.com",pathname:"geocoding/v1/reverse"});var c={key:this.apiKey,outputFormat:"json",JSONPCallback:"callback",location:e+","+a};this.executeRequest(c,b)},d.MapquestProvider.prototype.mapToGeocoded=function(a){var b=new d.Geocoded;return b.latitude=a.latLng.lat,b.longitude=a.latLng.lng,b.city=a.adminArea5,b.region=a.adminArea4,b.streetName=a.street,b.postal_code=a.postalCode,b},d.MapquestProvider.prototype.executeRequest=function(d,f){var b=this;this.externalLoader.executeRequest(d,function(c){var a=[];if(c.results[0].locations.length)for(var d in c.results[0].locations){a.push(b.mapToGeocoded(c.results[0].locations[d]))}f(a)})}}(GeocoderJS),"undefined"==typeof GeocoderJS&&"function"==typeof require){var GeocoderJS=require("../GeocoderJS.js");require("../Geocoded.js"),require("../ExternalURILoader.js"),require("../providers/ProviderBase.js")}if(function(d){"use strict";d.OpenStreetMapProvider=function(b){if(void 0===b)throw"No external loader defined.";this.externalLoader=b},d.OpenStreetMapProvider.prototype=new d.ProviderBase,d.OpenStreetMapProvider.prototype.constructor=d.OpenStreetMapProvider,d.OpenStreetMapProvider.prototype.geocode=function(c,a){this.externalLoader.setOptions({protocol:"https",host:"nominatim.openstreetmap.org",pathname:"search"});this.executeRequest({format:"json",q:c,addressdetails:1},a)},d.OpenStreetMapProvider.prototype.geodecode=function(d,a,b){this.externalLoader.setOptions({protocol:"https",host:"nominatim.openstreetmap.org",pathname:"reverse"});this.executeRequest({format:"json",lat:d,lon:a,addressdetails:1,zoom:18},b)},d.OpenStreetMapProvider.prototype.executeRequest=function(d,f){var b=this;this.externalLoader.executeRequest(d,function(c){var a=[];if(c.length)for(var d in c){a.push(b.mapToGeocoded(c[d]))}else a.push(b.mapToGeocoded(c));f(a)})},d.OpenStreetMapProvider.prototype.mapToGeocoded=function(a){var b=new d.Geocoded;return b.latitude=1*a.lat,b.longitude=1*a.lon,b.streetNumber=void 0!==a.address.house_number?a.address.house_number:void 0,b.streetName=a.address.road,b.city=a.address.city,b.region=a.address.state,b.postal_code=a.address.postcode,b.totalName=a.display_name,b.boundingbox=a.boundingbox,b}}(GeocoderJS),"undefined"==typeof GeocoderJS&&"function"==typeof require){var GeocoderJS=require("../GeocoderJS.js");require("../Geocoded.js"),require("../providers/ProviderBase.js")}!function(f){"use strict";var g;f.YandexProvider=function(b,a){if(void 0===b)throw"No external loader defined.";this.externalLoader=b,a=a?a:{},g=a.useSSL?a.useSSL:!1,this.lang=a.lang?a.lang:"en-US"},f.YandexProvider.prototype=new f.ProviderBase,f.YandexProvider.prototype.constructor=f.YandexProvider,f.YandexProvider.prototype.geocode=function(b,a){this.externalLoader.setOptions({protocol:!0===g?"https":"http",host:"geocode-maps.yandex.ru",pathname:"1.x"});var c={format:"json",geocode:b,JSONPCallback:"callback",lang:this.lang};this.executeRequest(c,a)},f.YandexProvider.prototype.geodecode=function(b,a,c){this.externalLoader.setOptions({protocol:!0===g?"https":"http",host:"geocode-maps.yandex.ru",pathname:"1.x"});var d={format:"json",geocode:a+","+b,JSONPCallback:"callback",lang:this.lang};this.executeRequest(d,c)},f.YandexProvider.prototype.executeRequest=function(d,f){var b=this;this.externalLoader.executeRequest(d,function(c){var a=[];for(var d in c.response.GeoObjectCollection.featureMember){a.push(b.mapToGeocoded(c.response.GeoObjectCollection.featureMember[d].GeoObject))}f(a)})},f.YandexProvider.prototype.mapToGeocoded=function(a){var b=new f.Geocoded,c=a.Point.pos.split(" ");if(b.latitude=c[1],b.longitude=c[0],a.metaDataProperty.GeocoderMetaData.AddressDetails.Country){var d=a.metaDataProperty.GeocoderMetaData.AddressDetails.Country;d.AdministrativeArea&&(d=d.AdministrativeArea,b.region=d.AdministrativeAreaName,d.SubAdministrativeArea&&(d=d.SubAdministrativeArea,d.Locality&&(d=d.Locality,b.city=d.LocalityName,d.Thoroughfare&&(d=d.Thoroughfare,b.streetName=d.ThoroughfareName))))}return b}}(GeocoderJS);
//# sourceMappingURL=geocoder.min.js.map
